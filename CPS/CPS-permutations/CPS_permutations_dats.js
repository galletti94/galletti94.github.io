/*
**
** The JavaScript code is generated by atscc2js
** The starting compilation time is: 2017-12-3: 14h:45m
**
*/

/* ATSextcode_beg() */
function
size_get()
{
  return parseInt(document.getElementById("intmax").value);
}
/* ATSextcode_end() */

function
__patsfun_12__closurerize(env0)
{
  return [function(cenv) { return __patsfun_12(cenv[1]); }, env0];
}


function
__patsfun_14__closurerize(env0, env1, env2)
{
  return [function(cenv, arg0) { return __patsfun_14(cenv[1], cenv[2], cenv[3], arg0); }, env0, env1, env2];
}


function
__patsfun_17__closurerize()
{
  return [function(cenv, arg0, arg1) { return __patsfun_17(arg0, arg1); }];
}


function
__patsfun_18__closurerize()
{
  return [function(cenv) { return __patsfun_18(); }];
}


function
_057_home_057_alexander_057_Documents_057_JavaScriptFiles_057_CPS_055_counters_057_CPS_055_permutations_057_CPS_permutations_056_dats__take(arg0, arg1)
{
//
// knd = 0
  var tmpret0
  var tmp10
  var tmplab, tmplab_js
//
  // __patsflab_take
  tmp10 = null;
  tmpret0 = aux_1(arg0, arg1, tmp10);
  return tmpret0;
} // end-of-function


function
aux_1(arg0, arg1, arg2)
{
//
// knd = 1
  var apy0
  var apy1
  var apy2
  var tmpret1
  var tmp3
  var tmp4
  var tmp5
  var tmp6
  var tmp7
  var tmp8
  var tmp9
  var funlab_js
  var tmplab, tmplab_js
//
  while(true) {
    funlab_js = 0;
    // __patsflab_aux_1
    tmp4 = ats2jspre_ML_list0_length(arg0);
    tmp3 = ats2jspre_lte_int0_int0(arg1, tmp4);
    ats2jspre_assert_errmsg_bool0(tmp3, "/home/alexander/Documents/JavaScriptFiles/CPS-counters/CPS-permutations/CPS_permutations.dats: 1084(line=71, offs=10) -- 1116(line=71, offs=42)");
    // ATScaseofseq_beg
    tmplab_js = 1;
    while(true) {
      tmplab = tmplab_js; tmplab_js = 0;
      switch(tmplab) {
        // ATSbranchseq_beg
        case 1: // __atstmplab0
        if(ATSCKptriscons(arg0)) {
          { tmplab_js = 4; break; }
        } // ifthen
        case 2: // __atstmplab1
        tmpret1 = null;
        break;
        // ATSbranchseq_end
        // ATSbranchseq_beg
        case 3: // __atstmplab2
        case 4: // __atstmplab3
        tmp5 = arg0[0];
        tmp6 = arg0[1];
        tmp7 = ats2jspre_eq_int0_int0(arg1, 0);
        if(tmp7) {
          tmpret1 = ats2jspre_ML_list0_reverse(arg2);
        } else {
          tmp8 = ats2jspre_sub_int0_int0(arg1, 1);
          tmp9 = [tmp5, arg2];
          // ATStailcalseq_beg
          apy0 = tmp6;
          apy1 = tmp8;
          apy2 = tmp9;
          arg0 = apy0;
          arg1 = apy1;
          arg2 = apy2;
          funlab_js = 1; // __patsflab_aux_1
          // ATStailcalseq_end
        } // end-of-if
        break;
        // ATSbranchseq_end
      } // end-of-switch
      if (tmplab_js === 0) break;
    } // endwhile
    // ATScaseofseq_end
    if (funlab_js > 0) continue; else return tmpret1;
  } // endwhile-fun
} // end-of-function


function
_057_home_057_alexander_057_Documents_057_JavaScriptFiles_057_CPS_055_counters_057_CPS_055_permutations_057_CPS_permutations_056_dats__drop(arg0, arg1)
{
//
// knd = 1
  var apy0
  var apy1
  var tmpret11
  var tmp13
  var tmp14
  var tmp16
  var tmp17
  var tmp18
  var funlab_js
  var tmplab, tmplab_js
//
  while(true) {
    funlab_js = 0;
    // __patsflab_drop
    tmp14 = ats2jspre_ML_list0_length(arg0);
    tmp13 = ats2jspre_lte_int0_int0(arg1, tmp14);
    ats2jspre_assert_errmsg_bool0(tmp13, "/home/alexander/Documents/JavaScriptFiles/CPS-counters/CPS-permutations/CPS_permutations.dats: 1378(line=90, offs=10) -- 1410(line=90, offs=42)");
    // ATScaseofseq_beg
    tmplab_js = 1;
    while(true) {
      tmplab = tmplab_js; tmplab_js = 0;
      switch(tmplab) {
        // ATSbranchseq_beg
        case 1: // __atstmplab4
        if(ATSCKptriscons(arg0)) {
          { tmplab_js = 4; break; }
        } // ifthen
        case 2: // __atstmplab5
        tmpret11 = null;
        break;
        // ATSbranchseq_end
        // ATSbranchseq_beg
        case 3: // __atstmplab6
        case 4: // __atstmplab7
        tmp16 = arg0[1];
        tmp17 = ats2jspre_eq_int0_int0(arg1, 0);
        if(tmp17) {
          tmpret11 = arg0;
        } else {
          tmp18 = ats2jspre_sub_int0_int0(arg1, 1);
          // ATStailcalseq_beg
          apy0 = tmp16;
          apy1 = tmp18;
          arg0 = apy0;
          arg1 = apy1;
          funlab_js = 1; // __patsflab_drop
          // ATStailcalseq_end
        } // end-of-if
        break;
        // ATSbranchseq_end
      } // end-of-switch
      if (tmplab_js === 0) break;
    } // endwhile
    // ATScaseofseq_end
    if (funlab_js > 0) continue; else return tmpret11;
  } // endwhile-fun
} // end-of-function


function
_057_home_057_alexander_057_Documents_057_JavaScriptFiles_057_CPS_055_counters_057_CPS_055_permutations_057_CPS_permutations_056_dats__get_at(arg0, arg1)
{
//
// knd = 1
  var apy0
  var apy1
  var tmpret19
  var tmp21
  var tmp22
  var tmp23
  var tmp24
  var tmp25
  var tmp26
  var funlab_js
  var tmplab, tmplab_js
//
  while(true) {
    funlab_js = 0;
    // __patsflab_get_at
    tmp22 = ats2jspre_ML_list0_length(arg0);
    tmp21 = ats2jspre_lt_int0_int0(arg1, tmp22);
    ats2jspre_assert_errmsg_bool0(tmp21, "/home/alexander/Documents/JavaScriptFiles/CPS-counters/CPS-permutations/CPS_permutations.dats: 1608(line=106, offs=10) -- 1639(line=106, offs=41)");
    // ATScaseofseq_beg
    tmplab_js = 1;
    while(true) {
      tmplab = tmplab_js; tmplab_js = 0;
      switch(tmplab) {
        // ATSbranchseq_beg
        case 1: // __atstmplab8
        if(ATSCKptrisnull(arg0)) {
          ATSINScaseof_fail("/home/alexander/Documents/JavaScriptFiles/CPS-counters/CPS-permutations/CPS_permutations.dats: 1643(line=108, offs=1) -- 1714(line=109, offs=60)");
        } // ifthen
        case 2: // __atstmplab9
        tmp23 = arg0[0];
        tmp24 = arg0[1];
        tmp25 = ats2jspre_eq_int0_int0(arg1, 0);
        if(tmp25) {
          tmpret19 = tmp23;
        } else {
          tmp26 = ats2jspre_sub_int0_int0(arg1, 1);
          // ATStailcalseq_beg
          apy0 = tmp24;
          apy1 = tmp26;
          arg0 = apy0;
          arg1 = apy1;
          funlab_js = 1; // __patsflab_get_at
          // ATStailcalseq_end
        } // end-of-if
        break;
        // ATSbranchseq_end
      } // end-of-switch
      if (tmplab_js === 0) break;
    } // endwhile
    // ATScaseofseq_end
    if (funlab_js > 0) continue; else return tmpret19;
  } // endwhile-fun
} // end-of-function


function
_057_home_057_alexander_057_Documents_057_JavaScriptFiles_057_CPS_055_counters_057_CPS_055_permutations_057_CPS_permutations_056_dats__swap(arg0, arg1, arg2)
{
//
// knd = 0
  var tmpret27
  var tmp28
  var tmp29
  var tmp30
  var tmp31
  var tmp32
  var tmp33
  var tmp34
  var tmp35
  var tmp36
  var tmp37
  var tmp38
  var tmp39
  var tmp40
  var tmplab, tmplab_js
//
  // __patsflab_swap
  tmp29 = _057_home_057_alexander_057_Documents_057_JavaScriptFiles_057_CPS_055_counters_057_CPS_055_permutations_057_CPS_permutations_056_dats__take(arg0, arg1);
  tmp31 = _057_home_057_alexander_057_Documents_057_JavaScriptFiles_057_CPS_055_counters_057_CPS_055_permutations_057_CPS_permutations_056_dats__get_at(arg0, arg2);
  tmp34 = ats2jspre_add_int0_int0(arg1, 1);
  tmp33 = _057_home_057_alexander_057_Documents_057_JavaScriptFiles_057_CPS_055_counters_057_CPS_055_permutations_057_CPS_permutations_056_dats__drop(arg0, tmp34);
  tmp36 = ats2jspre_sub_int0_int0(arg2, arg1);
  tmp35 = ats2jspre_sub_int0_int0(tmp36, 1);
  tmp32 = _057_home_057_alexander_057_Documents_057_JavaScriptFiles_057_CPS_055_counters_057_CPS_055_permutations_057_CPS_permutations_056_dats__take(tmp33, tmp35);
  tmp30 = [tmp31, tmp32];
  tmp28 = ats2jspre_ML_list0_append(tmp29, tmp30);
  tmp38 = _057_home_057_alexander_057_Documents_057_JavaScriptFiles_057_CPS_055_counters_057_CPS_055_permutations_057_CPS_permutations_056_dats__get_at(arg0, arg1);
  tmp40 = ats2jspre_add_int0_int0(arg2, 1);
  tmp39 = _057_home_057_alexander_057_Documents_057_JavaScriptFiles_057_CPS_055_counters_057_CPS_055_permutations_057_CPS_permutations_056_dats__drop(arg0, tmp40);
  tmp37 = [tmp38, tmp39];
  tmpret27 = ats2jspre_ML_list0_append(tmp28, tmp37);
  return tmpret27;
} // end-of-function


function
_057_home_057_alexander_057_Documents_057_JavaScriptFiles_057_CPS_055_counters_057_CPS_055_permutations_057_CPS_permutations_056_dats__permutate(arg0, arg1, arg2)
{
//
// knd = 1
  var apy0
  var apy1
  var apy2
  var tmpret41
  var tmp42
  var tmp43
  var tmp44
  var tmp45
  var tmp46
  var tmp47
  var tmp48
  var tmp49
  var tmp50
  var tmp51
  var tmp52
  var funlab_js
  var tmplab, tmplab_js
//
  while(true) {
    funlab_js = 0;
    // __patsflab_permutate
    tmp43 = ats2jspre_lt_int0_int0(arg1, arg2);
    if(tmp43) {
      tmp45 = ats2jspre_sub_int0_int0(arg1, 1);
      tmp44 = _057_home_057_alexander_057_Documents_057_JavaScriptFiles_057_CPS_055_counters_057_CPS_055_permutations_057_CPS_permutations_056_dats__get_at(arg0, tmp45);
      tmp46 = _057_home_057_alexander_057_Documents_057_JavaScriptFiles_057_CPS_055_counters_057_CPS_055_permutations_057_CPS_permutations_056_dats__get_at(arg0, arg2);
      tmp42 = ats2jspre_gt_int0_int0(tmp44, tmp46);
    } else {
      tmp42 = false;
    } // end-of-if
    if(tmp42) {
      tmp47 = ats2jspre_sub_int0_int0(arg2, 1);
      // ATStailcalseq_beg
      apy0 = arg0;
      apy1 = arg1;
      apy2 = tmp47;
      arg0 = apy0;
      arg1 = apy1;
      arg2 = apy2;
      funlab_js = 1; // __patsflab_permutate
      // ATStailcalseq_end
    } else {
      tmp49 = ats2jspre_sub_int0_int0(arg1, 1);
      tmp48 = _057_home_057_alexander_057_Documents_057_JavaScriptFiles_057_CPS_055_counters_057_CPS_055_permutations_057_CPS_permutations_056_dats__swap(arg0, tmp49, arg2);
      tmp50 = _057_home_057_alexander_057_Documents_057_JavaScriptFiles_057_CPS_055_counters_057_CPS_055_permutations_057_CPS_permutations_056_dats__take(tmp48, arg1);
      tmp52 = _057_home_057_alexander_057_Documents_057_JavaScriptFiles_057_CPS_055_counters_057_CPS_055_permutations_057_CPS_permutations_056_dats__drop(tmp48, arg1);
      tmp51 = ats2jspre_ML_list0_reverse(tmp52);
      tmpret41 = ats2jspre_ML_list0_append(tmp50, tmp51);
    } // end-of-if
    if (funlab_js > 0) continue; else return tmpret41;
  } // endwhile-fun
} // end-of-function


function
_057_home_057_alexander_057_Documents_057_JavaScriptFiles_057_CPS_055_counters_057_CPS_055_permutations_057_CPS_permutations_056_dats__pivot(arg0)
{
//
// knd = 0
  var tmpret53
  var tmp54
  var tmp55
  var tmplab, tmplab_js
//
  // __patsflab_pivot
  tmp55 = ats2jspre_ML_list0_length(arg0);
  tmp54 = ats2jspre_sub_int1_int1(tmp55, 1);
  tmpret53 = aux_7(tmp54, arg0, 0);
  return tmpret53;
} // end-of-function


function
aux_7(env0, arg0, arg1)
{
//
// knd = 1
  var apy0
  var apy1
  var tmpret56
  var tmp57
  var tmp58
  var tmp59
  var tmp60
  var tmp61
  var tmp62
  var tmp63
  var tmp64
  var funlab_js
  var tmplab, tmplab_js
//
  while(true) {
    funlab_js = 0;
    // __patsflab_aux_7
    tmp57 = ats2jspre_eq_int0_int0(env0, arg1);
    if(tmp57) {
      tmpret56 = arg1;
    } else {
      tmp60 = ats2jspre_sub_int0_int0(env0, arg1);
      tmp59 = _057_home_057_alexander_057_Documents_057_JavaScriptFiles_057_CPS_055_counters_057_CPS_055_permutations_057_CPS_permutations_056_dats__get_at(arg0, tmp60);
      tmp63 = ats2jspre_sub_int0_int0(env0, arg1);
      tmp62 = ats2jspre_sub_int0_int0(tmp63, 1);
      tmp61 = _057_home_057_alexander_057_Documents_057_JavaScriptFiles_057_CPS_055_counters_057_CPS_055_permutations_057_CPS_permutations_056_dats__get_at(arg0, tmp62);
      tmp58 = ats2jspre_gt_int0_int0(tmp59, tmp61);
      if(tmp58) {
        tmpret56 = ats2jspre_sub_int0_int0(env0, arg1);
      } else {
        tmp64 = ats2jspre_add_int0_int0(arg1, 1);
        // ATStailcalseq_beg
        apy0 = arg0;
        apy1 = tmp64;
        arg0 = apy0;
        arg1 = apy1;
        funlab_js = 1; // __patsflab_aux_7
        // ATStailcalseq_end
      } // end-of-if
    } // end-of-if
    if (funlab_js > 0) continue; else return tmpret56;
  } // endwhile-fun
} // end-of-function


function
_057_home_057_alexander_057_Documents_057_JavaScriptFiles_057_CPS_055_counters_057_CPS_055_permutations_057_CPS_permutations_056_dats__nextPerm(arg0)
{
//
// knd = 0
  var tmpret65
  var tmp66
  var tmp67
  var tmp68
  var tmplab, tmplab_js
//
  // __patsflab_nextPerm
  tmp66 = _057_home_057_alexander_057_Documents_057_JavaScriptFiles_057_CPS_055_counters_057_CPS_055_permutations_057_CPS_permutations_056_dats__pivot(arg0);
  tmp68 = ats2jspre_ML_list0_length(arg0);
  tmp67 = ats2jspre_sub_int1_int1(tmp68, 1);
  tmpret65 = _057_home_057_alexander_057_Documents_057_JavaScriptFiles_057_CPS_055_counters_057_CPS_055_permutations_057_CPS_permutations_056_dats__permutate(arg0, tmp66, tmp67);
  return tmpret65;
} // end-of-function


function
_057_home_057_alexander_057_Documents_057_JavaScriptFiles_057_CPS_055_counters_057_CPS_055_permutations_057_CPS_permutations_056_dats__make_list0(arg0)
{
//
// knd = 0
  var tmpret69
  var tmp70
  var tmp71
  var tmp72
  var tmplab, tmplab_js
//
  // __patsflab_make_list0
  tmp70 = ats2jspre_eq_int0_int0(arg0, 0);
  if(tmp70) {
    tmpret69 = null;
  } else {
    tmp72 = ats2jspre_sub_int0_int0(arg0, 1);
    tmp71 = _057_home_057_alexander_057_Documents_057_JavaScriptFiles_057_CPS_055_counters_057_CPS_055_permutations_057_CPS_permutations_056_dats__make_list0(tmp72);
    tmpret69 = [arg0, tmp71];
  } // end-of-if
  return tmpret69;
} // end-of-function


function
_057_home_057_alexander_057_Documents_057_JavaScriptFiles_057_CPS_055_counters_057_CPS_055_permutations_057_CPS_permutations_056_dats__thePerms()
{
//
// knd = 0
  var tmpret73
  var tmp78
  var tmp79
  var tmp80
  var tmplab, tmplab_js
//
  // __patsflab_thePerms
  tmp78 = size_get();
  tmp80 = _057_home_057_alexander_057_Documents_057_JavaScriptFiles_057_CPS_055_counters_057_CPS_055_permutations_057_CPS_permutations_056_dats__make_list0(tmp78);
  tmp79 = ats2jspre_ML_list0_reverse(tmp80);
  tmpret73 = aux_11(tmp79);
  return tmpret73;
} // end-of-function


function
aux_11(arg0)
{
//
// knd = 0
  var tmpret74
  var tmplab, tmplab_js
//
  // __patsflab_aux_11
  tmpret74 = ATSPMVlazyval(__patsfun_12__closurerize(arg0));
  return tmpret74;
} // end-of-function


function
__patsfun_12(env0)
{
//
// knd = 0
  var tmpret75
  var tmp76
  var tmp77
  var tmplab, tmplab_js
//
  // __patsflab___patsfun_12
  tmp77 = _057_home_057_alexander_057_Documents_057_JavaScriptFiles_057_CPS_055_counters_057_CPS_055_permutations_057_CPS_permutations_056_dats__nextPerm(env0);
  tmp76 = aux_11(tmp77);
  tmpret75 = [env0, tmp76];
  return tmpret75;
} // end-of-function


function
_057_home_057_alexander_057_Documents_057_JavaScriptFiles_057_CPS_055_counters_057_CPS_055_permutations_057_CPS_permutations_056_dats__stream_kforeach(arg0, arg1, arg2)
{
//
// knd = 0
  var tmp82
  var tmp83
  var tmp84
  var tmplab, tmplab_js
//
  // __patsflab_stream_kforeach
  tmp82 = ATSPMVlazyval_eval(arg0); 
  // ATScaseofseq_beg
  tmplab_js = 1;
  while(true) {
    tmplab = tmplab_js; tmplab_js = 0;
    switch(tmplab) {
      // ATSbranchseq_beg
      case 1: // __atstmplab10
      if(ATSCKptriscons(tmp82)) {
        { tmplab_js = 4; break; }
      } // ifthen
      case 2: // __atstmplab11
      arg2[0](arg2);
      break;
      // ATSbranchseq_end
      // ATSbranchseq_beg
      case 3: // __atstmplab12
      case 4: // __atstmplab13
      tmp83 = tmp82[0];
      tmp84 = tmp82[1];
      arg1[0](arg1, tmp83, __patsfun_14__closurerize(arg1, arg2, tmp84));
      break;
      // ATSbranchseq_end
    } // end-of-switch
    if (tmplab_js === 0) break;
  } // endwhile
  // ATScaseofseq_end
  return/*_void*/;
} // end-of-function


function
__patsfun_14(env0, env1, env2, arg0)
{
//
// knd = 0
  var tmplab, tmplab_js
//
  // __patsflab___patsfun_14
  if(arg0) {
    _057_home_057_alexander_057_Documents_057_JavaScriptFiles_057_CPS_055_counters_057_CPS_055_permutations_057_CPS_permutations_056_dats__stream_kforeach(env2, env0, env1);
  } else {
    env1[0](env1);
  } // end-of-if
  return/*_void*/;
} // end-of-function


function
_057_home_057_alexander_057_Documents_057_JavaScriptFiles_057_CPS_055_counters_057_CPS_055_permutations_057_CPS_permutations_056_dats__is_reversed(arg0)
{
//
// knd = 1
  var apy0
  var tmpret86
  var tmp87
  var tmp88
  var tmp89
  var tmp91
  var funlab_js
  var tmplab, tmplab_js
//
  while(true) {
    funlab_js = 0;
    // __patsflab_is_reversed
    // ATScaseofseq_beg
    tmplab_js = 1;
    while(true) {
      tmplab = tmplab_js; tmplab_js = 0;
      switch(tmplab) {
        // ATSbranchseq_beg
        case 1: // __atstmplab14
        if(ATSCKptriscons(arg0)) {
          { tmplab_js = 4; break; }
        } // ifthen
        case 2: // __atstmplab15
        tmpret86 = true;
        break;
        // ATSbranchseq_end
        // ATSbranchseq_beg
        case 3: // __atstmplab16
        case 4: // __atstmplab17
        tmp87 = arg0[0];
        tmp88 = arg0[1];
        // ATScaseofseq_beg
        tmplab_js = 1;
        while(true) {
          tmplab = tmplab_js; tmplab_js = 0;
          switch(tmplab) {
            // ATSbranchseq_beg
            case 1: // __atstmplab18
            if(ATSCKptriscons(tmp88)) {
              { tmplab_js = 4; break; }
            } // ifthen
            case 2: // __atstmplab19
            tmpret86 = true;
            break;
            // ATSbranchseq_end
            // ATSbranchseq_beg
            case 3: // __atstmplab20
            case 4: // __atstmplab21
            tmp89 = tmp88[0];
            tmp91 = ats2jspre_lt_int0_int0(tmp87, tmp89);
            if(tmp91) {
              tmpret86 = false;
            } else {
              // ATStailcalseq_beg
              apy0 = tmp88;
              arg0 = apy0;
              funlab_js = 1; // __patsflab_is_reversed
              // ATStailcalseq_end
            } // end-of-if
            break;
            // ATSbranchseq_end
          } // end-of-switch
          if (tmplab_js === 0) break;
        } // endwhile
        // ATScaseofseq_end
        break;
        // ATSbranchseq_end
      } // end-of-switch
      if (tmplab_js === 0) break;
    } // endwhile
    // ATScaseofseq_end
    if (funlab_js > 0) continue; else return tmpret86;
  } // endwhile-fun
} // end-of-function


function
the_perms_start()
{
//
// knd = 0
  var tmp93
  var tmp100
  var tmp102
  var tmplab, tmplab_js
//
  // __patsflab_the_perms_start
  tmp93 = _057_home_057_alexander_057_Documents_057_JavaScriptFiles_057_CPS_055_counters_057_CPS_055_permutations_057_CPS_permutations_056_dats__thePerms();
  tmp100 = __patsfun_17__closurerize();
  tmp102 = __patsfun_18__closurerize();
  _057_home_057_alexander_057_Documents_057_JavaScriptFiles_057_CPS_055_counters_057_CPS_055_permutations_057_CPS_permutations_056_dats__stream_kforeach(tmp93, tmp100, tmp102);
  return/*_void*/;
} // end-of-function


function
__patsfun_17(arg0, arg1)
{
//
// knd = 0
  var tmp95
  var tmp96
  var tmp97
  var tmp98
  var tmp99
  var tmplab, tmplab_js
//
  // __patsflab___patsfun_17
  tmp96 = _057_home_057_alexander_057_Documents_057_JavaScriptFiles_057_CPS_055_counters_057_CPS_055_permutations_057_CPS_permutations_056_dats__is_reversed(arg0);
  if(tmp96) {
    tmp95 = ats2jspre_confirm("DONE !");
  } else {
    tmp99 = ats2jspre_String(arg0);
    tmp98 = ats2jspre_string_append("Next Permutation= [", tmp99);
    tmp97 = ats2jspre_string_append(tmp98, "]. Continue?");
    tmp95 = ats2jspre_confirm(tmp97);
  } // end-of-if
  arg1[0](arg1, tmp95);
  return/*_void*/;
} // end-of-function


function
__patsfun_18()
{
//
// knd = 0
  var tmplab, tmplab_js
//
  // __patsflab___patsfun_18
  ats2jspre_alert("Stopped");
  return/*_void*/;
} // end-of-function

// dynloadflag_minit
var _057_home_057_alexander_057_Documents_057_JavaScriptFiles_057_CPS_055_counters_057_CPS_055_permutations_057_CPS_permutations_056_dats__dynloadflag = 0;

function
_057_home_057_alexander_057_Documents_057_JavaScriptFiles_057_CPS_055_counters_057_CPS_055_permutations_057_CPS_permutations_056_dats__dynload()
{
//
// knd = 0
  var tmplab, tmplab_js
//
  // ATSdynload()
  // ATSdynloadflag_sta(_057_home_057_alexander_057_Documents_057_JavaScriptFiles_057_CPS_055_counters_057_CPS_055_permutations_057_CPS_permutations_056_dats__dynloadflag(209))
  if(ATSCKiseqz(_057_home_057_alexander_057_Documents_057_JavaScriptFiles_057_CPS_055_counters_057_CPS_055_permutations_057_CPS_permutations_056_dats__dynloadflag)) {
    _057_home_057_alexander_057_Documents_057_JavaScriptFiles_057_CPS_055_counters_057_CPS_055_permutations_057_CPS_permutations_056_dats__dynloadflag = 1 ; // flag is set
  } // end-of-if
  return/*_void*/;
} // end-of-function


function
permute__dynload()
{
//
// knd = 0
  var tmplab, tmplab_js
//
  _057_home_057_alexander_057_Documents_057_JavaScriptFiles_057_CPS_055_counters_057_CPS_055_permutations_057_CPS_permutations_056_dats__dynload();
  return/*_void*/;
} // end-of-function


/* ATSextcode_beg() */
//
function
permute__initize()
{
//
permute__dynload(); return;
//
} // end of [permute__initize]
/* ATSextcode_end() */

/* ATSextcode_beg() */
//
jQuery(document).ready(function(){permute__initize();});
//
/* ATSextcode_end() */

/* ****** ****** */

/* end-of-compilation-unit */
